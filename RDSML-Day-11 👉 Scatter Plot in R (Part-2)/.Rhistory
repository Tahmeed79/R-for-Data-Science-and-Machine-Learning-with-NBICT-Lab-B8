11/2
11%%2
11%/%2
library(tidyverse)
library(tidyverse)
library(ggplot2)
ggtree
setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B8/RDSML-Day-11 ðŸ‘‰ Scatter Plot in R (Part-2)")
# install.packages(ggplot2)
library(ggplot2)
dataset = mtcars
dataset = mtcars
# install.packages(ggplot2)
library(ggplot2)
dataset = mtcars
# install.packages(ggplot2)
library(ggplot2)
install.packages(ggplot2)
detach("package:ggplot2", unload = TRUE)
install.packages(ggplot2)
library(ggplot2)
library(ggplot2)
dataset = mtcars
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE, colour = "orange")+ #regression line
equation (label.x = 3, label.y = 5.5)+
labs(title = "wt vs mpg",
x = "weight",
y = "MPG")+
theme_classic()
detach("package:ggplot2", unload = TRUE)
install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE, colour = "orange")+ #regression line
equation (label.x = 3, label.y = 5.5)+
labs(title = "wt vs mpg",
x = "weight",
y = "MPG")+
theme_classic()
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE, colour = "orange")+ #regression line
labs(title = "wt vs mpg",
x = "weight",
y = "MPG")+
theme_classic()
View(dataset)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
labs(title = "wt vs mpg",
x = "weight",
y = "MPG")+
theme_classic()
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg)) +geom_point()+
geom_smooth (method = lm, se = FALSE)
library(ggplot2)
dataset = mtcars
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg)) +geom_point()+
geom_smooth (method = lm, se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth (method = lm, se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method = lm, se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method = lm, se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method = lm, se = FALSE)
#install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method = lm, se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method ="lm", se = FALSE)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE)+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()+
geom_smooth (method ="lm", se = FALSE)
detach("package:ggplot2", unload = TRUE)
install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg))
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg))
detach("package:ggplot2", unload = TRUE)
install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg))
# generating a basic scatter plot between wt and mpg
ggplot(dataset, aes(wt,mpg)) +
geom_point()+
geom_smooth(method = "lm")+ #regression line
# best fit line with
# confidence interval as shadow area
# removing the confidence interval
ggplot(dataset, aes(wt,mpg))
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth()
rlang::last_trace()
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth()
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, se = FALSE)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, se = FALSE, colors("red"))
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, se = FALSE, color ("red"))
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, se = FALSE, linetype = dashed)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, se = FALSE, linetype = "dashed")
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, se = FALSE, linetype = "dashed")
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, se = FALSE, linetype = "dashed", color = "red")
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, se = FALSE, linetype = "dashed", color = "red", fill = "orange")
# loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = loess(), se = FALSE, linetype = "dashed", color = "red", fill = "orange")
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = loess(), se = FALSE, linetype = "dashed", color = "red", fill = "orange")
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = loess(), se = FALSE, linetype = "dashed", color = "darkred", fill = "orange")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, se = FALSE, linetype = "dashed", color = "darkred", fill = "orange")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, se = FALSE, linetype = "dashed", color = "darkred",
fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred",
fill = "blue")
ggplot(dataset$cyl, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# changing point shape and color
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# # changing point shape and color and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
